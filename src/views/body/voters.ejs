<%- include ('../partials/skeletal') %>

<!-- partial -->
<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body" id="voters">
                        <p class="card-title mb-0">List of voters
                            <a href="/voters/create" class="btn btn-outline-primary btn-md float-right">Add voter</a> </p>
                        <div class="table-responsive">
                            <table class="table table-striped table-borderless">
                                <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Phone</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                </tr>
                                </thead>
                                <tbody v-for="voter in voters" :key="voter.id">
                                    <tr>
                                        <td>{{ voter.name }}</td>
                                        <td class="font-weight-bold">{{ voter.phone }}</td>
                                        <td>{{ new Date(voter.createdAt).toDateString() }}</td>
                                        <td class="font-weight-medium"><div class="badge badge-success">Completed</div></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div>
                            <p>
                                Showing {{ pageSize }} of {{ rows }} entries
                            </p>
                            <div class="btn-group mt-3 float-right" role="group" aria-label="Basic example">
                                <button :disabled="isNextButtonDisabled" @click="pageChangeHandle('next')" type="button" class="btn btn-outline-secondary">Prev</button>
                                <button :disabled="isPreviousButtonDisabled" @click="pageChangeHandle('previous')" type="button" class="btn btn-outline-secondary">Next</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- content-wrapper ends -->
</div>
<!-- main-panel ends -->
<script>
  Vue.use(Toasted);
  new Vue({
    el: '#voters',
    data: {
      voters: [],
      currentPage: 1,
      pageLimit: 10,
      rows: null,
      pageSize: null,
      pageCount: null,
      token: null,
      getVotersUrl: '/api/voters'
    },
    mounted() {
      this.token = localStorage.getItem('fmst_ticket');
      if (!this.token) return window.location.replace('/')
      this.getVoters();
    },
    methods: {
      handleError(e) {
        this.loading = false;
        this.$toasted.error(e.response.data.message).goAway(5000);
      },

      getVoters() {
        axios.get(`${this.getVotersUrl}?currentPage=${this.currentPage}&pageLimit=${this.pageLimit}`, { headers: { 'Authorization': `Bearer ${this.token}` } })
          .then(response => {
            this.voters = response.data.data.docs
            this.rows = response.data.data.total
            this.pageSize = response.data.data.docs.length
            this.pageCount = response.data.data.pages
          })
          .catch(error => this.handleError(error))
      },
      pageChangeHandle(value) {
        if (value === 'next') {
          this.currentPage += 1
          this.getVoters()
        } else if (value === 'previous') {
          this.currentPage -= 1
          this.getVoters()
        }
      },
    },
    computed: {
      isPreviousButtonDisabled() {
        return this.currentPage === 1
      },
      isNextButtonDisabled() {
        return this.currentPage === this.pageCount
      }
    }
  })
</script>
<%- include ('../partials/footer') %>